#!/usr/bin/perl -w
# author: Hari Hendaryanto <hari.h -at- csmcom.com>
use strict;
use warnings;
use Sys::Syslog qw(:DEFAULT setlogsock);
use List::Util::WeightedRoundRobin;
use Storable;

# $count variable latest value stored in file.hash for next script execution
# reference http://www.perlmonks.org/?node_id=510202
my $hashfile="/tmp/file.hash";
store {}, $hashfile unless -r $hashfile;

#
# our transports lists, we will define this in master.cf as transport services
# Queued using Weighted Round-Robin Scheduling
#
my $list = [
    {
        name    => 'smtp1:',
        weight  => 4,
    },
    {
        name    => 'smtp2:',
        weight  => 2,
    },
    {
        name    => 'smtp3:',
        weight  => 2,
    },
    {
        name    => 'smtp4:',
        weight  => 2,
    },
    {
        name    => 'smtp5:',
        weight  => 3,
    },
    {
        name    => 'smtp6:',
        weight  => 2,
    },
    {
        name    => 'smtp7:',
        weight  => 1,
    },
    {
        name    => 'smtp8:',
        weight  => 2,
    },
    {
        name    => 'smtp9:',
        weight  => 2,
    },
    {
        name    => 'smtp10:',
        weight  => 2,
    },
    {
        name    => 'smtp10:',
        weight  => 2,
    },
    {
        name    => 'smtp10:',
        weight  => 2,
    },
    {
        name    => 'smtp10:',
        weight  => 2,
    },
    {
        name    => 'smtp10:',
        weight  => 2,
    },
    {
        name    => 'smtp10:',
        weight  => 2,
    },
    {
        name    => 'smtp10:',
        weight  => 2,
    },
    {
        name    => 'smtp10:',
        weight  => 2,
    },
    {
        name    => 'smtp10:',
        weight  => 2,
    },
    {
        name    => 'smtp10:',
        weight  => 2,
    },
    {
        name    => 'smtp10:',
        weight  => 2,
    },
    {
        name    => 'smtp10:',
        weight  => 2,
    },
 
  ];

my $WeightedList = List::Util::WeightedRoundRobin->new();
my $weighted_list = $WeightedList->create_weighted_list( $list );

# $maxinqueue max number of queue in smtp list
my $maxinqueue = scalar(@{$weighted_list});

#
# Initalize and open syslog.
#
openlog('postfix/randomizer','pid','mail');
#
# Autoflush standard output.
#
select STDOUT; $|++;

while (<>) {
    chomp;
    my $count;
    my $hash=retrieve($hashfile);

    # patched by Heartless Mofo <mofoheartless -at- gmail.com>
    # in order to achieve true round robin
    if (time() - $hash->{"skipper"} <= 1)
    {
            $hash->{"index"}=$hash->{"index"};
    }
    elsif (time() - $hash->{"skipper"} > 1)
    {
            $hash->{"index"}++;
            $hash->{"skipper"} = time();
    }
    # end of patch

    if (!defined $hash->{"index"})
    {
            $count = 0;
    } else {
            $count = $hash->{"index"};
    }

    if ($count >= $maxinqueue)
    {
            $hash->{"index"} = 0;
            $count = 0;
    }

    $hash->{"index"}++;
    store $hash, $hashfile;
    my $random_smtp = ${$weighted_list}[$count];
    if (/^get\s(.+)$/i) {
        print "200 $random_smtp\n";
        syslog("info","Using: %s Transport Service", $random_smtp);
        next;
    }
    print "200 smtp:\n";
}
